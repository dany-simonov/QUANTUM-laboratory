
import React, { useState } from 'react';
import { Magnet, RotateCcw, Play, Info, Zap } from 'lucide-react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Slider } from '@/components/ui/slider';

interface MagneticFieldSimulatorProps {
  gameState: any;
  onExperimentComplete: (knowledge: number) => void;
}

const MagneticFieldSimulator: React.FC<MagneticFieldSimulatorProps> = ({ 
  gameState, 
  onExperimentComplete 
}) => {
  const [magnetStrength, setMagnetStrength] = useState([50]);
  const [current, setCurrent] = useState([10]);
  const [experimentType, setExperimentType] = useState<'field_lines' | 'force' | 'induction'>('field_lines');
  const [isRunning, setIsRunning] = useState(false);
  const [experimentCount, setExperimentCount] = useState(0);
  const [time, setTime] = useState(0);

  const magneticField = magnetStrength[0] / 100 * 0.5; // Tesla
  const force = magneticField * current[0] / 10 * 0.1; // Newton

  const runSimulation = () => {
    setIsRunning(true);
    setExperimentCount(prev => prev + 1);
    setTime(0);
    
    const interval = setInterval(() => {
      setTime(prev => {
        if (prev >= 4) {
          clearInterval(interval);
          setIsRunning(false);
          const knowledge = Math.floor(Math.random() * 16) + 12;
          onExperimentComplete(knowledge);
          return 0;
        }
        return prev + 0.1;
      });
    }, 100);
  };

  const resetSimulation = () => {
    setMagnetStrength([50]);
    setCurrent([10]);
    setExperimentType('field_lines');
    setIsRunning(false);
    setTime(0);
  };

  const getExperimentName = (type: string) => {
    switch (type) {
      case 'field_lines': return '–°–∏–ª–æ–≤—ã–µ –ª–∏–Ω–∏–∏';
      case 'force': return '–°–∏–ª–∞ –õ–æ—Ä–µ–Ω—Ü–∞';
      case 'induction': return '–ò–Ω–¥—É–∫—Ü–∏—è';
      default: return '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
    }
  };

  return (
    <div className="space-y-6">
      <Card className="energy-border bg-card/90">
        <CardHeader>
          <CardTitle className="text-2xl text-glow text-quantum-purple flex items-center gap-3">
            <Magnet className="w-8 h-8" />
            –°–∏–º—É–ª—è—Ç–æ—Ä –ú–∞–≥–Ω–∏—Ç–Ω—ã—Ö –ü–æ–ª–µ–π
          </CardTitle>
          <p className="text-muted-foreground">
            –ú–æ–¥–µ–ª–∏—Ä—É–π—Ç–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ –º–∞–≥–Ω–∏—Ç–Ω—ã—Ö –ø–æ–ª–µ–π —Å —Ç–æ–∫–∞–º–∏ –∏ —á–∞—Å—Ç–∏—Ü–∞–º–∏
          </p>
        </CardHeader>
      </Card>

      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
        {/* Controls */}
        <Card className="bg-card/90">
          <CardHeader>
            <CardTitle className="text-lg">–ü–∞—Ä–∞–º–µ—Ç—Ä—ã —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞</CardTitle>
          </CardHeader>
          <CardContent className="space-y-6">
            <div>
              <label className="text-sm font-semibold mb-2 block">
                –¢–∏–ø —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞
              </label>
              <div className="flex flex-col gap-2">
                <Button
                  onClick={() => setExperimentType('field_lines')}
                  variant={experimentType === 'field_lines' ? 'default' : 'outline'}
                  size="sm"
                >
                  –°–∏–ª–æ–≤—ã–µ –ª–∏–Ω–∏–∏ –ø–æ–ª—è
                </Button>
                <Button
                  onClick={() => setExperimentType('force')}
                  variant={experimentType === 'force' ? 'default' : 'outline'}
                  size="sm"
                >
                  –°–∏–ª–∞ –õ–æ—Ä–µ–Ω—Ü–∞
                </Button>
                <Button
                  onClick={() => setExperimentType('induction')}
                  variant={experimentType === 'induction' ? 'default' : 'outline'}
                  size="sm"
                >
                  –≠–ª–µ–∫—Ç—Ä–æ–º–∞–≥–Ω–∏—Ç–Ω–∞—è –∏–Ω–¥—É–∫—Ü–∏—è
                </Button>
              </div>
            </div>

            <div>
              <label className="text-sm font-semibold mb-2 block">
                –°–∏–ª–∞ –º–∞–≥–Ω–∏—Ç–∞: {magnetStrength[0]}%
              </label>
              <Slider
                value={magnetStrength}
                onValueChange={setMagnetStrength}
                min={10}
                max={100}
                step={5}
                className="w-full"
              />
            </div>

            {(experimentType === 'force' || experimentType === 'induction') && (
              <div>
                <label className="text-sm font-semibold mb-2 block">
                  –°–∏–ª–∞ —Ç–æ–∫–∞: {current[0]} –ê
                </label>
                <Slider
                  value={current}
                  onValueChange={setCurrent}
                  min={1}
                  max={50}
                  step={1}
                  className="w-full"
                />
              </div>
            )}

            <div className="flex gap-2">
              <Button
                onClick={runSimulation}
                disabled={isRunning}
                className="flex-1 bg-quantum-purple hover:bg-quantum-purple/80"
              >
                <Play className="w-4 h-4 mr-2" />
                {isRunning ? '–ê–Ω–∞–ª–∏–∑...' : '–ó–∞–ø—É—Å—Ç–∏—Ç—å'}
              </Button>
              <Button
                onClick={resetSimulation}
                variant="outline"
                size="icon"
              >
                <RotateCcw className="w-4 h-4" />
              </Button>
            </div>
          </CardContent>
        </Card>

        {/* Visualization & Results */}
        <Card className="bg-card/90">
          <CardHeader>
            <CardTitle className="text-lg">{getExperimentName(experimentType)}</CardTitle>
          </CardHeader>
          <CardContent className="space-y-4">
            {/* Magnetic Field Visualization */}
            <div className="bg-lab-surface/50 p-6 rounded-lg border h-48 flex items-center justify-center">
              <div className="text-center">
                {experimentType === 'field_lines' && (
                  <div>
                    <div className="text-6xl mb-2">üß≤</div>
                    <div className="text-sm">N ‚üµ ‚ü∂ S</div>
                    {isRunning && (
                      <div className="mt-2 text-quantum-purple animate-pulse">
                        –°–∏–ª–æ–≤—ã–µ –ª–∏–Ω–∏–∏ –≤–∏–¥–∏–º—ã...
                      </div>
                    )}
                  </div>
                )}
                
                {experimentType === 'force' && (
                  <div>
                    <div className="text-6xl mb-2">‚ö°</div>
                    <div className="text-sm">–ß–∞—Å—Ç–∏—Ü–∞ –≤ –ø–æ–ª–µ</div>
                    {isRunning && (
                      <div className="mt-2 text-quantum-blue">
                        <Zap className="w-6 h-6 mx-auto animate-bounce" />
                        –°–∏–ª–∞: {force.toFixed(3)} –ù
                      </div>
                    )}
                  </div>
                )}
                
                {experimentType === 'induction' && (
                  <div>
                    <div className="text-6xl mb-2">üîÑ</div>
                    <div className="text-sm">–ü—Ä–æ–≤–æ–¥–Ω–∏–∫ –¥–≤–∏–∂–µ—Ç—Å—è</div>
                    {isRunning && (
                      <div className="mt-2 text-quantum-green animate-pulse">
                        –≠–î–° –∏–Ω–¥—É–∫—Ü–∏–∏ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç...
                      </div>
                    )}
                  </div>
                )}
                
                {isRunning && (
                  <div className="mt-2 text-sm">
                    –í—Ä–µ–º—è: {time.toFixed(1)}—Å
                  </div>
                )}
              </div>
            </div>

            {/* Measurements */}
            <div className="grid grid-cols-2 gap-4">
              <div className="bg-quantum-purple/10 p-3 rounded border border-quantum-purple/20">
                <div className="text-sm text-quantum-purple">–ú–∞–≥–Ω–∏—Ç–Ω–æ–µ –ø–æ–ª–µ</div>
                <div className="text-lg font-semibold">
                  {magneticField.toFixed(3)} –¢–ª
                </div>
              </div>
              {(experimentType === 'force' || experimentType === 'induction') && (
                <div className="bg-quantum-blue/10 p-3 rounded border border-quantum-blue/20">
                  <div className="text-sm text-quantum-blue">
                    {experimentType === 'force' ? '–°–∏–ª–∞' : '–≠–î–°'}
                  </div>
                  <div className="text-lg font-semibold">
                    {experimentType === 'force' 
                      ? `${force.toFixed(3)} –ù`
                      : `${(magneticField * current[0] / 10).toFixed(2)} –í`
                    }
                  </div>
                </div>
              )}
            </div>

            {/* Physics Info */}
            <Card className="bg-gradient-to-r from-lab-surface to-quantum-purple/5">
              <CardContent className="p-4">
                <div className="flex items-center gap-2 mb-2">
                  <Info className="w-4 h-4 text-quantum-purple" />
                  <span className="text-sm font-semibold">–§–æ—Ä–º—É–ª—ã</span>
                </div>
                <div className="text-sm text-muted-foreground space-y-1">
                  {experimentType === 'force' && (
                    <>
                      <p>F = BIL (—Å–∏–ª–∞ –ê–º–ø–µ—Ä–∞)</p>
                      <p>F = {magneticField.toFixed(3)} √ó {current[0]} √ó 0.1 = {force.toFixed(3)} –ù</p>
                    </>
                  )}
                  {experimentType === 'induction' && (
                    <>
                      <p>Œµ = -dŒ¶/dt (–∑–∞–∫–æ–Ω –§–∞—Ä–∞–¥–µ—è)</p>
                      <p>Œµ = BLv ‚âà {(magneticField * current[0] / 10).toFixed(2)} –í</p>
                    </>
                  )}
                  {experimentType === 'field_lines' && (
                    <p>B = {magneticField.toFixed(3)} –¢–ª</p>
                  )}
                </div>
              </CardContent>
            </Card>

            <div className="flex justify-between items-center text-sm">
              <span>–≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤ –ø—Ä–æ–≤–µ–¥–µ–Ω–æ:</span>
              <Badge>{experimentCount}</Badge>
            </div>
          </CardContent>
        </Card>
      </div>

      {/* Educational Facts */}
      <Card className="bg-gradient-to-r from-lab-surface to-quantum-purple/5">
        <CardHeader>
          <CardTitle className="text-lg">üß† –ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ñ–∞–∫—Ç—ã</CardTitle>
        </CardHeader>
        <CardContent>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm">
            <div>
              <h4 className="font-semibold text-quantum-purple mb-1">–ü—Ä–∞–≤–∏–ª–æ –ø—Ä–∞–≤–æ–π —Ä—É–∫–∏</h4>
              <p className="text-muted-foreground">
                –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∞–≥–Ω–∏—Ç–Ω–æ–≥–æ –ø–æ–ª—è –≤–æ–∫—Ä—É–≥ –ø—Ä–æ–≤–æ–¥–Ω–∏–∫–∞ —Å —Ç–æ–∫–æ–º
              </p>
            </div>
            <div>
              <h4 className="font-semibold text-quantum-blue mb-1">–°–∏–ª–∞ –õ–æ—Ä–µ–Ω—Ü–∞</h4>
              <p className="text-muted-foreground">
                –î–µ–π—Å—Ç–≤—É–µ—Ç –Ω–∞ –¥–≤–∏–∂—É—â–∏–µ—Å—è –∑–∞—Ä—è–∂–µ–Ω–Ω—ã–µ —á–∞—Å—Ç–∏—Ü—ã –≤ –º–∞–≥–Ω–∏—Ç–Ω–æ–º –ø–æ–ª–µ
              </p>
            </div>
            <div>
              <h4 className="font-semibold text-quantum-green mb-1">–ó–∞–∫–æ–Ω –§–∞—Ä–∞–¥–µ—è</h4>
              <p className="text-muted-foreground">
                –ò–∑–º–µ–Ω—è—é—â–µ–µ—Å—è –º–∞–≥–Ω–∏—Ç–Ω–æ–µ –ø–æ–ª–µ —Å–æ–∑–¥–∞–µ—Ç —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–æ–µ –ø–æ–ª–µ
              </p>
            </div>
            <div>
              <h4 className="font-semibold text-quantum-orange mb-1">–ú–∞–≥–Ω–∏—Ç–Ω–æ–µ –ø–æ–ª–µ –ó–µ–º–ª–∏</h4>
              <p className="text-muted-foreground">
                –ó–∞—â–∏—â–∞–µ—Ç –Ω–∞—Å –æ—Ç –∫–æ—Å–º–∏—á–µ—Å–∫–æ–≥–æ –∏–∑–ª—É—á–µ–Ω–∏—è, —Å–∏–ª–∞ ‚âà 0.00005 –¢–ª
              </p>
            </div>
          </div>
        </CardContent>
      </Card>
    </div>
  );
};

export default MagneticFieldSimulator;
